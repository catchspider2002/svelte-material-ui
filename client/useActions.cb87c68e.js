import{l as e,b as t}from"./index.0f7eb1e1.js";function r(r,o=[]){const n=["focus","blur","fullscreenchange","fullscreenerror","scroll","cut","copy","paste","keydown","keypress","keyup","auxclick","click","contextmenu","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseout","mouseup","pointerlockchange","pointerlockerror","select","wheel","drag","dragend","dragenter","dragstart","dragleave","dragover","drop","touchcancel","touchend","touchmove","touchstart","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture",...o];function u(e){t(r,e)}return t=>{const r=[];for(let o=0;o<n.length;o++)r.push(e(t,n[o],u));return{destroy:()=>{for(let e=0;e<r.length;e++)r[e]()}}}}function o(e,t){let r=Object.getOwnPropertyNames(e);const o={};for(let n=0;n<r.length;n++){const u=r[n],s=u.indexOf("$");-1!==s&&-1!==t.indexOf(u.substring(0,s+1))||-1===t.indexOf(u)&&(o[u]=e[u])}return o}function n(e,t){let r=[];if(t)for(let o=0;o<t.length;o++){const n=Array.isArray(t[o]),u=n?t[o][0]:t[o];n&&t[o].length>1?r.push(u(e,t[o][1])):r.push(u(e))}return{update(e){if((e&&e.length||0)!=r.length)throw new Error("You must not change the length of an actions array.");if(e)for(let t=0;t<e.length;t++)if(r[t]&&"update"in r[t]){Array.isArray(e[t])&&e[t].length>1?r[t].update(e[t][1]):r[t].update()}},destroy(){for(let e=0;e<r.length;e++)r[e]&&"destroy"in r[e]&&r[e].destroy()}}}export{o as e,r as f,n as u};
